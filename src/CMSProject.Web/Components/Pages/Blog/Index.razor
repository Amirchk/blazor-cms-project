@page "/blog"
@layout PublicLayout
@using CMSProject.Core.Entities
@using CMSProject.Core.Interfaces
@inject IContentRepository ContentRepository
@inject NavigationManager Navigation

<PageTitle>Blog - My CMS</PageTitle>

<MudText Typo="Typo.h2" Align="Align.Center" GutterBottom="true">Welcome to My Blog</MudText>
<MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Secondary" Class="mb-8">
    Discover articles, tutorials, and insights
</MudText>

@if (loading)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else if (!articles.Any())
{
    <MudPaper Class="pa-8" Elevation="0">
        <MudText Typo="Typo.h5" Align="Align.Center">No articles published yet.</MudText>
        <MudText Align="Align.Center" Class="mt-2">
            <MudLink Href="/login">Login to admin</MudLink> to create your first post!
        </MudText>
    </MudPaper>
}
else
{
    <MudGrid>
        @foreach (var article in articles)
        {
            <MudItem xs="12" md="6" lg="4">
                <MudCard Elevation="2" Class="h-100">
                    @if (!string.IsNullOrEmpty(GetFirstImage(article.Body)))
                    {
                        <MudCardMedia Image="@GetFirstImage(article.Body)" Height="200" />
                    }
                    <MudCardContent>
                        <MudText Typo="Typo.h5" GutterBottom="true">@article.Title</MudText>
                        
                        @if (article.Category != null)
                        {
                            <MudChip T="string" Size="Size.Small" Color="Color.Primary" Class="mb-2">
                                @article.Category.Name
                            </MudChip>
                        }
                        
                        <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-2">
                            @article.PublishedDate?.ToString("MMMM dd, yyyy")
                        </MudText>
                        
                        <MudText Typo="Typo.body2">
                            @(article.Summary ?? GetExcerpt(article.Body))
                        </MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary" 
                                   OnClick="@(() => Navigation.NavigateTo($"/blog/{article.Slug}"))">
                            Read More
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    private List<Content> articles = new();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadArticles();
    }

    private async Task LoadArticles()
    {
        loading = true;
        var result = await ContentRepository.GetPublishedAsync();
        articles = result.OrderByDescending(a => a.PublishedDate).ToList();
        loading = false;
    }

    private string GetExcerpt(string body)
    {
        if (string.IsNullOrEmpty(body))
            return "";
        
        // Remove HTML tags
        var text = System.Text.RegularExpressions.Regex.Replace(body, "<.*?>", string.Empty);
        return text.Length > 150 ? text.Substring(0, 150) + "..." : text;
    }

    private string? GetFirstImage(string body)
    {
        if (string.IsNullOrEmpty(body))
            return null;

        var match = System.Text.RegularExpressions.Regex.Match(body, @"<img[^>]+src=""([^"">]+)""");
        return match.Success ? match.Groups[1].Value : null;
    }
}